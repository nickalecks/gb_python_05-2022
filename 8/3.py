"""
3. Создайте собственный класс-исключение, который должен проверять содержимое списка на
наличие только чисел. Проверить работу исключения на реальном примере. Запрашивать у
пользователя данные и заполнять список необходимо только числами. Класс-исключение
должен контролировать типы данных элементов списка.
Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно, пока
пользователь сам не остановит работу скрипта, введя, например, команду «stop». При этом
скрипт завершается, сформированный список с числами выводится на экран.
Подсказка: для этого задания примем, что пользователь может вводить только числа и строки.
Во время ввода пользователем очередного элемента необходимо реализовать проверку типа
элемента. Вносить его в список, только если введено число. Класс-исключение должен не
позволить пользователю ввести текст (не число) и отобразить соответствующее сообщение.
При этом работа скрипта не должна завершаться
"""

class OwnError(Exception):

    def __init__(self, txt):
        self.txt = txt

result = []
exit = False

while exit == False:

    input_data = input('Введите число: ')
    if input_data == 'stop':
        exit = True
        break
    else:
        try:
            input_data = int(input_data)
            result.append(input_data)
        except ValueError:
            input_data = input('Вы ввели не число, попробуйте ещё раз: ')
        except OwnError as error:
            print(error)


print(result)